name: Ruby Gem

on:
  push:
    branches: ["main"]
    paths:
      - "lib/parquet/version.rb"
  pull_request:
    branches: ["main"]
    paths:
      - "lib/parquet/version.rb"
  workflow_dispatch:

jobs:
  build:
    name: Build + Publish
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            build_type: normal
            platform: ruby
          - os: ubuntu-24.04
            arch: x86_64
            platform: linux
            build_type: native
            platform_name: x86_64-linux
            duckdb_url: "https://github.com/duckdb/duckdb/releases/download/v1.1.3/libduckdb-linux-amd64.zip"
          - os: ubuntu-24.04-arm
            arch: arm64
            platform: linux
            build_type: native
            platform_name: aarch64-linux
            duckdb_url: "https://github.com/duckdb/duckdb/releases/download/v1.1.3/libduckdb-linux-aarch64.zip"
          - os: macos-latest
            arch: arm64
            platform: darwin
            build_type: native
            platform_name: arm64-darwin
            duckdb_url: "https://github.com/duckdb/duckdb/releases/download/v1.1.3/libduckdb-osx-universal.zip"
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write # IMPORTANT: this permission is required for `rake release` to push the release tag

    steps:
      - uses: actions/checkout@v4

      - name: Download and Install DuckDB
        run: |
          echo "Downloading DuckDB from ${{ matrix.duckdb_url }}"
          if [[ "${{ matrix.os }}" == ubuntu* ]]; then
            wget ${{ matrix.duckdb_url }} -O duckdb.zip
            unzip duckdb.zip
            sudo cp libduckdb.so /usr/local/lib/
            sudo cp duckdb.h duckdb.hpp /usr/local/include/
            sudo ldconfig
          else
            curl -L ${{ matrix.duckdb_url }} -o duckdb.zip
            unzip duckdb.zip
            sudo mkdir -p /usr/local/lib /usr/local/include
            sudo install_name_tool -id /usr/local/lib/libduckdb.dylib libduckdb.dylib
            sudo cp libduckdb.dylib /usr/local/lib/
            sudo cp duckdb.h duckdb.hpp /usr/local/include/
          fi

      - name: Set up Ruby 3.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true

      - name: Build Normal Gem
        if: matrix.build_type == 'normal'
        run: |
          echo "Building normal gem without native extensions"
          gem build parquet.gemspec

      - name: Build Native Gem
        if: matrix.build_type == 'native'
        env:
          RUBY_PLATFORM: ${{ matrix.platform_name }}
        run: |
          echo "Building native gem for ${{ matrix.platform_name }}"
          gem build parquet.gemspec --platform=${{ matrix.platform_name }} --output=parquet-${{ matrix.platform_name }}.gem

      - name: Set remote URL
        run: |
          # Attribute commits to the last committer on HEAD
          git config --global user.email "$(git log -1 --pretty=format:'%ae')"
          git config --global user.name "$(git log -1 --pretty=format:'%an')"
          git remote set-url origin "https://x-access-token:${{ github.token }}@github.com/$GITHUB_REPOSITORY"
        shell: bash
      - name: Configure trusted publishing credentials
        uses: rubygems/configure-rubygems-credentials@v1.0.0
      - name: Download patch
        shell: bash
        run: |
          wget https://raw.githubusercontent.com/rubygems/release-gem/refs/heads/v1/rubygems-attestation-patch.rb
      - name: Run release rake task
        shell: bash
        env:
          RUBYOPT: "${{ format('-r{0}/rubygems-attestation-patch.rb {1}', github.workspace, env.RUBYOPT) || env.RUBYOPT }}"
        run: |
          if [[ "${{ matrix.build_type }}" == "normal" ]]; then
            gem push --key rubygems parquet-*.gem
          else
            gem push --key rubygems parquet-${{ matrix.platform_name }}.gem
          fi
      - name: Wait for release to propagate
        run: gem exec rubygems-await pkg/*.gem
        shell: bash

